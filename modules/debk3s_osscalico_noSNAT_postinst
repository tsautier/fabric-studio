#!/bin/bash
#===============================================================================
# SCRIPT NAME:    modules/debk3s_osscalico_noSNAT_postinst
# DESCRIPTION:    Additions
# AUTHOR:         Sacha Dubois, Fortinet
# CREATED:        2025-03-14
# VERSION:        1.0
#===============================================================================
# CHANGE LOG:
# 2025-03-15 sdubois Initial version
# 2025-05-07 sdubois Added dependancy file
#===============================================================================

export COPY_KUBCONFIG_DEBCLI=0
export COPY_KUBCONFIG_DEBADM=0
export APP_ECHOSERVER_INGRESS=0
export APP_EDB_INGRESS=0
export APP_GLOBEX_INGRESS=0
export APP_APEX_INGRESS=0
export APP_ACME_INGRESS=0
export APP_TOOLBOX_INGRESS=0
export PROXY_DEFAULT_ROUTER=0

echo "############################### Start fortipoc/postinst ###############################"

echo "=> Update Installed Packages"
apt update -qq > /dev/null 2>&1; ret=$?
[ $ret -ne 0 ] && echo "   ▪ Package update failed, check internet connection" && exit 1

echo "=> Installing Additional Packages"
for pkg in curl jq traceroute net-tools; do
  apt install -y -qq "$pkg" > /tmp/${pkg}.log 2>&1; ret=$?
  if [ $ret -ne 0 ]; then
    echo "   ▪ Package installation of $pkg failed"
    echo "---------------------------------------------------------------------------------------"
    cat /tmp/${pkg}.log
    echo "---------------------------------------------------------------------------------------"
  else
    echo "   ▪ Package installation of $pkg compleded"
  fi
done

echo "=> Installing Helm"
curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash > /dev/null 2>&1

echo "=> Installing K3S Kubernetes"
# https://docs.tigera.io/calico/latest/getting-started/kubernetes/k3s/quickstart
curl -sfL https://get.k3s.io | K3S_KUBECONFIG_MODE="644" INSTALL_K3S_EXEC="--tls-san 10.1.1.200 --flannel-backend=none --cluster-cidr=192.168.0.0/16 --disable-network-policy --disable=traefik" sh -
sleep 10

echo "# Install Calico and patch 'natOutgoing: true' to 'natOutgoing: false' in IP-Pool: default-ipv4-ippoolit
kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.30.0/manifests/calico.yaml
kubectl wait --for=condition=Ready pods --all --all-namespaces --timeout=500s

kubectl patch ippool default-ipv4-ippool --type merge -p '{"spec":{"natOutgoing":false}}'
kubectl wait --for=condition=Ready pods --all --all-namespaces --timeout=500s
echo "#####################################################################################"
kubectl get ippool default-ipv4-ippool -o yaml
echo "#####################################################################################"

echo "# Setup Kubeconfig"
export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

echo "   ▪ Install mettallb"
kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.13.10/config/manifests/metallb-native.yaml
sleep 30
kubectl wait --namespace metallb-system --for=condition=ready pod --selector=app=metallb --timeout=90s

echo "   ▪ Configure Metallb for Subnet Range: 10.1.1.230-10.1.1.250"
cat <<EOF | kubectl apply -f -
apiVersion: metallb.io/v1beta1
kind: IPAddressPool
metadata:
  name: dhcp-pool
  namespace: metallb-system
spec:
  addresses:
  - 10.1.1.220-10.1.1.250
---
apiVersion: metallb.io/v1beta1
kind: L2Advertisement
metadata:
  name: l2advert
  namespace: metallb-system
spec:
  ipAddressPools:
  - dhcp-pool
EOF

echo "   ▪ Install Traefik"
helm repo add traefik https://traefik.github.io/charts
helm repo update
helm install traefik traefik/traefik \
  --namespace kube-system \
  --set service.type=LoadBalancer

kubectl wait --for=condition=Ready pods --all --all-namespaces --timeout=300s

echo "   ▪ Get Kubeconfig and Set Permissions"
chmod a+r /etc/rancher/k3s/k3s.yaml
mkdir -p /home/fortinet/.kube
cat /etc/rancher/k3s/k3s.yaml | sed 's/127.0.0.1/10.1.1.200/g' > /home/fortinet/.kube/config
chown -R fortinet:fortinet /home/fortinet

sleep 5

echo "=> Password less SuDo"
chown root:root /etc/sudoers.d /etc/sudoers.d/fortinet

echo "=> Kubernetes Configuration"
ipa=$(kubectl get svc -n kube-system traefik -o json | jq -r '.status.loadBalancer.ingress[].ip')
echo "   ▪ IP Address of the Ingress Controller (traefik): $ipa"

[ $APP_ECHOSERVER_INGRESS -eq 1 ] && su - fortinet -c "/home/fortinet/bin/deploy-echoserver-ingress.sh > /dev/null 2>&1" && echo "   ▪ Application (echoserver) deployed"
[ $APP_EDB_INGRESS -eq 1 ] && su - fortinet -c "/home/fortinet/bin/deploy-edb-ingress.sh > /dev/null 2>&1" && echo "   ▪ Application (edb) deployed"
[ $APP_GLOBEX_INGRESS -eq 1 ] && su - fortinet -c "/home/fortinet/bin/deploy-globex-ingress.sh > /dev/null 2>&1" && echo "   ▪ Application (globex) deployed"
[ $APP_APEX_INGRESS -eq 1 ] && su - fortinet -c "/home/fortinet/bin/deploy-apex-ingress.sh > /dev/null 2>&1" && echo "   ▪ Application (apex) deployed"
[ $APP_ACME_INGRESS -eq 1 ] && su - fortinet -c "/home/fortinet/bin/deploy-acme-ingress.sh > /dev/null 2>&1" && echo "   ▪ Application (acme) deployed"
[ $APP_TOOLBOX_INGRESS -eq 1 ] && su - fortinet -c "/home/fortinet/bin/deploy-toolbox-ingress.sh > /dev/null 2>&1" && echo "   ▪ Application (toolbox) deployed"

if [ "$PROXY_DEFAULT_ROUTER" -eq 1 ]; then
  echo "   ▪ Change default router to 10.1.1.1 on interface ens3"
  ip route del default > /dev/null 2>&1
  ip route add default via 10.1.1.1 dev ens3 > /dev/null 2>&1
fi

# Changw Ownership and Permissions
chown -R fortinet:fortinet /home/fortinet/cert /home/fortinet/fortidemoCA.crt
